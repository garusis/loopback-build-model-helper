{"version":3,"sources":["index.js"],"names":["app","ModelBuilder","OwnModel","LoopbackModel","Base","Model","config","settings","wrapFunction","fn","fnName","collection","isFunction","oldFn","args","toArray","arguments","cb","length","pop","push","apply","then","response","catch","assign","forEach","prototype","remoteMethod","name","options","build","resolve","reject","once"],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;;;;;AAEA,IAAIA,YAAJ;;AAEA,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,aAAhC,EAA+C;AAC3C,SAAKC,IAAL,GAAYF,QAAZ;AACA,SAAKG,KAAL,GAAaF,aAAb;AACH;;AAEDF,aAAaK,MAAb,GAAsB,UAAUC,QAAV,EAAoB;AACtCP,UAAMO,SAASP,GAAf;AACH,CAFD;;AAIA,SAASQ,YAAT,CAAsBC,EAAtB,EAA0BC,MAA1B,EAAkCC,UAAlC,EAA8CN,KAA9C,EAAqD;AACjD,QAAI,CAAC,iBAAEO,UAAF,CAAaH,EAAb,CAAL,EAAuB;;AAEvB,QAAII,QAAQR,MAAMK,MAAN,KAAiB,KAA7B;;AAEAL,UAAMK,MAAN,IAAgBC,WAAWD,MAAX,IAAqB,YAAY;AAC7C,YAAII,OAAO,iBAAEC,OAAF,CAAUC,SAAV,CAAX;AACA,YAAIC,KAAK,iBAAEL,UAAF,CAAaE,KAAKA,KAAKI,MAAL,GAAc,CAAnB,CAAb,IAAsCJ,KAAKK,GAAL,EAAtC,GAAmD,KAA5D;;AAEA,YAAIN,KAAJ,EAAWC,KAAKM,IAAL,CAAUP,KAAV;;AAEX,YAAI,CAACI,EAAL,EAAS,OAAOR,GAAGY,KAAH,CAAS,IAAT,EAAeP,IAAf,CAAP;;AAETL,WAAGY,KAAH,CAAS,IAAT,EAAeP,IAAf,EACKQ,IADL,CACU,UAACC,QAAD;AAAA,mBAAcN,GAAG,IAAH,EAASM,QAAT,CAAd;AAAA,SADV,EAEKC,KAFL,CAEWP,EAFX;AAGH,KAXD;AAYH;;AAGDhB,aAAawB,MAAb,GAAsB,UAAUrB,IAAV,EAAgBC,KAAhB,EAAuB;AACzC,qBAAEqB,OAAF,CAAUtB,IAAV,EAAgB,UAACK,EAAD,EAAKC,MAAL,EAAaC,UAAb;AAAA,eAA4BH,aAAaC,EAAb,EAAiBC,MAAjB,EAAyBC,UAAzB,EAAqCN,KAArC,CAA5B;AAAA,KAAhB;AACA,qBAAEqB,OAAF,CAAUtB,KAAKuB,SAAf,EAA0B,UAAClB,EAAD,EAAKC,MAAL,EAAaC,UAAb;AAAA,eAA4BH,aAAaC,EAAb,EAAiBC,MAAjB,EAAyBC,UAAzB,EAAqCN,KAArC,CAA5B;AAAA,KAA1B;AACH,CAHD;;AAMAJ,aAAa0B,SAAb,CAAuBC,YAAvB,GAAsC,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAC3D,SAAKzB,KAAL,CAAWuB,YAAX,CAAwBC,IAAxB,EAA8BC,OAA9B;AACH,CAFD;;AAIA;;;;AAIA7B,aAAa0B,SAAb,CAAuBI,KAAvB,GAA+B,YAAY;AAAA;;AACvC,WAAO,uBAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCjC,YAAIkC,IAAJ,CAAS,QAAT,EAAmB,YAAM;AACrBjC,yBAAawB,MAAb,CAAoB,MAAKrB,IAAzB,EAA+B,MAAKC,KAApC;AACA2B,oBAAQ,MAAK5B,IAAb;AACH,SAHD;AAIH,KALM,CAAP;AAMH,CAPD;;AAUA;;;;kBAIeH,Y","file":"index.js","sourcesContent":["\"use strict\"\n\nimport _ from \"lodash\"\nimport Promise from \"bluebird\"\n\nlet app\n\nfunction ModelBuilder(OwnModel, LoopbackModel) {\n    this.Base = OwnModel\n    this.Model = LoopbackModel\n}\n\nModelBuilder.config = function (settings) {\n    app = settings.app\n}\n\nfunction wrapFunction(fn, fnName, collection, Model) {\n    if (!_.isFunction(fn)) return\n\n    let oldFn = Model[fnName] || false\n\n    Model[fnName] = collection[fnName] = function () {\n        let args = _.toArray(arguments)\n        let cb = _.isFunction(args[args.length - 1]) ? args.pop() : false\n\n        if (oldFn) args.push(oldFn)\n\n        if (!cb) return fn.apply(this, args)\n\n        fn.apply(this, args)\n            .then((response) => cb(null, response))\n            .catch(cb)\n    }\n}\n\n\nModelBuilder.assign = function (Base, Model) {\n    _.forEach(Base, (fn, fnName, collection) => wrapFunction(fn, fnName, collection, Model))\n    _.forEach(Base.prototype, (fn, fnName, collection) => wrapFunction(fn, fnName, collection, Model))\n}\n\n\nModelBuilder.prototype.remoteMethod = function (name, options) {\n    this.Model.remoteMethod(name, options)\n}\n\n/**\n *\n * @return {Promise}\n */\nModelBuilder.prototype.build = function () {\n    return new Promise((resolve, reject) => {\n        app.once(\"booted\", () => {\n            ModelBuilder.assign(this.Base, this.Model)\n            resolve(this.Base)\n        })\n    })\n}\n\n\n/**\n * ModelBuilder class exists to allow you to effectively use the Webstorm autocomplementation tools.\n * @constructor\n */\nexport default ModelBuilder"],"sourceRoot":"./"}